// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: svr/cell/v1/cell_db.proto

package cellv1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// CellEntity 单元格实体
type CellEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repid       string `protobuf:"bytes,1,opt,name=repid,proto3" json:"repid,omitempty"`       // 单元格主体 node * java *
	Compid      string `protobuf:"bytes,2,opt,name=compid,proto3" json:"compid,omitempty"`     // 组件编码 node √ java √ fm-cell/block-00001 （业务分类-comptype-nnnnn）
	Compjqid    string `protobuf:"bytes,3,opt,name=compjqid,proto3" json:"compjqid,omitempty"` // subblock编码 node √ java √ -comptype-nnnnn）
	Comptype    string `protobuf:"bytes,4,opt,name=comptype,proto3" json:"comptype,omitempty"` // 序号 node √ java √
	Sheetid     string `protobuf:"bytes,5,opt,name=sheetid,proto3" json:"sheetid,omitempty"`
	Rlabel      string `protobuf:"bytes,6,opt,name=rlabel,proto3" json:"rlabel,omitempty"`        // 行标签 node √ java √
	Clabel      string `protobuf:"bytes,7,opt,name=clabel,proto3" json:"clabel,omitempty"`        // 列标签 node √ java √
	Rowno       string `protobuf:"bytes,8,opt,name=rowno,proto3" json:"rowno,omitempty"`          // 行位置 node √ java √
	Columnno    string `protobuf:"bytes,9,opt,name=columnno,proto3" json:"columnno,omitempty"`    // 列位置 node √ java √
	Cellvalue   string `protobuf:"bytes,10,opt,name=cellvalue,proto3" json:"cellvalue,omitempty"` // 单元格条件 node √ java √
	Mdate       int32  `protobuf:"varint,12,opt,name=mdate,proto3" json:"mdate,omitempty"`        // 制表日期 node * java *
	Mtime       int32  `protobuf:"varint,13,opt,name=mtime,proto3" json:"mtime,omitempty"`        // 制表时间 node * java *
	Muser       string `protobuf:"bytes,14,opt,name=muser,proto3" json:"muser,omitempty"`         // 制表人  node * java √
	Blocktype   string `protobuf:"bytes,15,opt,name=blocktype,proto3" json:"blocktype,omitempty"`
	Refrowno    string `protobuf:"bytes,16,opt,name=refrowno,proto3" json:"refrowno,omitempty"`
	Refcolumnno string `protobuf:"bytes,17,opt,name=refcolumnno,proto3" json:"refcolumnno,omitempty"`
}

func (x *CellEntity) Reset() {
	*x = CellEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svr_cell_v1_cell_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellEntity) ProtoMessage() {}

func (x *CellEntity) ProtoReflect() protoreflect.Message {
	mi := &file_svr_cell_v1_cell_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellEntity.ProtoReflect.Descriptor instead.
func (*CellEntity) Descriptor() ([]byte, []int) {
	return file_svr_cell_v1_cell_db_proto_rawDescGZIP(), []int{0}
}

func (x *CellEntity) GetRepid() string {
	if x != nil {
		return x.Repid
	}
	return ""
}

func (x *CellEntity) GetCompid() string {
	if x != nil {
		return x.Compid
	}
	return ""
}

func (x *CellEntity) GetCompjqid() string {
	if x != nil {
		return x.Compjqid
	}
	return ""
}

func (x *CellEntity) GetComptype() string {
	if x != nil {
		return x.Comptype
	}
	return ""
}

func (x *CellEntity) GetSheetid() string {
	if x != nil {
		return x.Sheetid
	}
	return ""
}

func (x *CellEntity) GetRlabel() string {
	if x != nil {
		return x.Rlabel
	}
	return ""
}

func (x *CellEntity) GetClabel() string {
	if x != nil {
		return x.Clabel
	}
	return ""
}

func (x *CellEntity) GetRowno() string {
	if x != nil {
		return x.Rowno
	}
	return ""
}

func (x *CellEntity) GetColumnno() string {
	if x != nil {
		return x.Columnno
	}
	return ""
}

func (x *CellEntity) GetCellvalue() string {
	if x != nil {
		return x.Cellvalue
	}
	return ""
}

func (x *CellEntity) GetMdate() int32 {
	if x != nil {
		return x.Mdate
	}
	return 0
}

func (x *CellEntity) GetMtime() int32 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *CellEntity) GetMuser() string {
	if x != nil {
		return x.Muser
	}
	return ""
}

func (x *CellEntity) GetBlocktype() string {
	if x != nil {
		return x.Blocktype
	}
	return ""
}

func (x *CellEntity) GetRefrowno() string {
	if x != nil {
		return x.Refrowno
	}
	return ""
}

func (x *CellEntity) GetRefcolumnno() string {
	if x != nil {
		return x.Refcolumnno
	}
	return ""
}

// CellSubEntity 动态单元格
type CellSubEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repid     string `protobuf:"bytes,1,opt,name=repid,proto3" json:"repid,omitempty"`          // 单元格主体 node * java *
	Compid    string `protobuf:"bytes,2,opt,name=compid,proto3" json:"compid,omitempty"`        // 组件编码 node √ java √ FM-CELL/BLOCK-00001 （业务分类-COMPTYPE-nnnnn）
	Subcompid string `protobuf:"bytes,3,opt,name=subcompid,proto3" json:"subcompid,omitempty"`  // subBlock编码 node √ java √ -COMPTYPE-nnnnn）
	Seqno     int64  `protobuf:"varint,4,opt,name=seqno,proto3" json:"seqno,omitempty"`         // 序号 node √ java √
	Compjqid  string `protobuf:"bytes,5,opt,name=compjqid,proto3" json:"compjqid,omitempty"`    // 久其编码 node √ java √
	Rlabel    string `protobuf:"bytes,6,opt,name=rlabel,proto3" json:"rlabel,omitempty"`        // 行标签 node √ java √
	Clabel    string `protobuf:"bytes,7,opt,name=clabel,proto3" json:"clabel,omitempty"`        // 列标签 node √ java √
	Rowno     string `protobuf:"bytes,8,opt,name=rowno,proto3" json:"rowno,omitempty"`          // 行位置 node √ java √
	Columnno  string `protobuf:"bytes,9,opt,name=columnno,proto3" json:"columnno,omitempty"`    // 列位置 node √ java √
	Cellvalue string `protobuf:"bytes,10,opt,name=cellvalue,proto3" json:"cellvalue,omitempty"` // 单元格条件 node √ java √
	Mdate     int32  `protobuf:"varint,12,opt,name=mdate,proto3" json:"mdate,omitempty"`        // 制表日期 node * java *
	Mtime     int32  `protobuf:"varint,13,opt,name=mtime,proto3" json:"mtime,omitempty"`        // 制表时间 node * java *
	Muser     string `protobuf:"bytes,14,opt,name=muser,proto3" json:"muser,omitempty"`         // 制表人  node * java √
	Sheetid   string `protobuf:"bytes,15,opt,name=sheetid,proto3" json:"sheetid,omitempty"`
}

func (x *CellSubEntity) Reset() {
	*x = CellSubEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svr_cell_v1_cell_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellSubEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellSubEntity) ProtoMessage() {}

func (x *CellSubEntity) ProtoReflect() protoreflect.Message {
	mi := &file_svr_cell_v1_cell_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellSubEntity.ProtoReflect.Descriptor instead.
func (*CellSubEntity) Descriptor() ([]byte, []int) {
	return file_svr_cell_v1_cell_db_proto_rawDescGZIP(), []int{1}
}

func (x *CellSubEntity) GetRepid() string {
	if x != nil {
		return x.Repid
	}
	return ""
}

func (x *CellSubEntity) GetCompid() string {
	if x != nil {
		return x.Compid
	}
	return ""
}

func (x *CellSubEntity) GetSubcompid() string {
	if x != nil {
		return x.Subcompid
	}
	return ""
}

func (x *CellSubEntity) GetSeqno() int64 {
	if x != nil {
		return x.Seqno
	}
	return 0
}

func (x *CellSubEntity) GetCompjqid() string {
	if x != nil {
		return x.Compjqid
	}
	return ""
}

func (x *CellSubEntity) GetRlabel() string {
	if x != nil {
		return x.Rlabel
	}
	return ""
}

func (x *CellSubEntity) GetClabel() string {
	if x != nil {
		return x.Clabel
	}
	return ""
}

func (x *CellSubEntity) GetRowno() string {
	if x != nil {
		return x.Rowno
	}
	return ""
}

func (x *CellSubEntity) GetColumnno() string {
	if x != nil {
		return x.Columnno
	}
	return ""
}

func (x *CellSubEntity) GetCellvalue() string {
	if x != nil {
		return x.Cellvalue
	}
	return ""
}

func (x *CellSubEntity) GetMdate() int32 {
	if x != nil {
		return x.Mdate
	}
	return 0
}

func (x *CellSubEntity) GetMtime() int32 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *CellSubEntity) GetMuser() string {
	if x != nil {
		return x.Muser
	}
	return ""
}

func (x *CellSubEntity) GetSheetid() string {
	if x != nil {
		return x.Sheetid
	}
	return ""
}

// CellSaveEntity 落地的单元格
type CellSaveEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repid       string `protobuf:"bytes,1,opt,name=repid,proto3" json:"repid,omitempty"`       // 单元格主体 node * java *
	Compid      string `protobuf:"bytes,2,opt,name=compid,proto3" json:"compid,omitempty"`     // 组件编码 node √ java √ fm-cell/block-00001 （业务分类-comptype-nnnnn）
	Compjqid    string `protobuf:"bytes,3,opt,name=compjqid,proto3" json:"compjqid,omitempty"` // subblock编码 node √ java √ -comptype-nnnnn）
	Comptype    string `protobuf:"bytes,4,opt,name=comptype,proto3" json:"comptype,omitempty"` // 序号 node √ java √
	Sheetid     string `protobuf:"bytes,5,opt,name=sheetid,proto3" json:"sheetid,omitempty"`
	Rlabel      string `protobuf:"bytes,6,opt,name=rlabel,proto3" json:"rlabel,omitempty"`          // 行标签 node √ java √
	Clabel      string `protobuf:"bytes,7,opt,name=clabel,proto3" json:"clabel,omitempty"`          // 列标签 node √ java √
	Rowno       string `protobuf:"bytes,8,opt,name=rowno,proto3" json:"rowno,omitempty"`            // 行位置 node √ java √
	Columnno    string `protobuf:"bytes,9,opt,name=columnno,proto3" json:"columnno,omitempty"`      // 列位置 node √ java √
	Cellvalue   string `protobuf:"bytes,10,opt,name=cellvalue,proto3" json:"cellvalue,omitempty"`   // 单元格条件 node √ java √
	Cellfilter  string `protobuf:"bytes,11,opt,name=cellfilter,proto3" json:"cellfilter,omitempty"` // 单元格条件 node √ java √
	Mdate       int32  `protobuf:"varint,12,opt,name=mdate,proto3" json:"mdate,omitempty"`          // 制表日期 node * java *
	Mtime       int32  `protobuf:"varint,13,opt,name=mtime,proto3" json:"mtime,omitempty"`          // 制表时间 node * java *
	Muser       string `protobuf:"bytes,14,opt,name=muser,proto3" json:"muser,omitempty"`           // 制表人  node * java √
	Blocktype   string `protobuf:"bytes,15,opt,name=blocktype,proto3" json:"blocktype,omitempty"`
	Refrowno    string `protobuf:"bytes,16,opt,name=refrowno,proto3" json:"refrowno,omitempty"`
	Refcolumnno string `protobuf:"bytes,17,opt,name=refcolumnno,proto3" json:"refcolumnno,omitempty"`
	Repldid     string `protobuf:"bytes,18,opt,name=repldid,proto3" json:"repldid,omitempty"`
}

func (x *CellSaveEntity) Reset() {
	*x = CellSaveEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svr_cell_v1_cell_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellSaveEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellSaveEntity) ProtoMessage() {}

func (x *CellSaveEntity) ProtoReflect() protoreflect.Message {
	mi := &file_svr_cell_v1_cell_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellSaveEntity.ProtoReflect.Descriptor instead.
func (*CellSaveEntity) Descriptor() ([]byte, []int) {
	return file_svr_cell_v1_cell_db_proto_rawDescGZIP(), []int{2}
}

func (x *CellSaveEntity) GetRepid() string {
	if x != nil {
		return x.Repid
	}
	return ""
}

func (x *CellSaveEntity) GetCompid() string {
	if x != nil {
		return x.Compid
	}
	return ""
}

func (x *CellSaveEntity) GetCompjqid() string {
	if x != nil {
		return x.Compjqid
	}
	return ""
}

func (x *CellSaveEntity) GetComptype() string {
	if x != nil {
		return x.Comptype
	}
	return ""
}

func (x *CellSaveEntity) GetSheetid() string {
	if x != nil {
		return x.Sheetid
	}
	return ""
}

func (x *CellSaveEntity) GetRlabel() string {
	if x != nil {
		return x.Rlabel
	}
	return ""
}

func (x *CellSaveEntity) GetClabel() string {
	if x != nil {
		return x.Clabel
	}
	return ""
}

func (x *CellSaveEntity) GetRowno() string {
	if x != nil {
		return x.Rowno
	}
	return ""
}

func (x *CellSaveEntity) GetColumnno() string {
	if x != nil {
		return x.Columnno
	}
	return ""
}

func (x *CellSaveEntity) GetCellvalue() string {
	if x != nil {
		return x.Cellvalue
	}
	return ""
}

func (x *CellSaveEntity) GetCellfilter() string {
	if x != nil {
		return x.Cellfilter
	}
	return ""
}

func (x *CellSaveEntity) GetMdate() int32 {
	if x != nil {
		return x.Mdate
	}
	return 0
}

func (x *CellSaveEntity) GetMtime() int32 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *CellSaveEntity) GetMuser() string {
	if x != nil {
		return x.Muser
	}
	return ""
}

func (x *CellSaveEntity) GetBlocktype() string {
	if x != nil {
		return x.Blocktype
	}
	return ""
}

func (x *CellSaveEntity) GetRefrowno() string {
	if x != nil {
		return x.Refrowno
	}
	return ""
}

func (x *CellSaveEntity) GetRefcolumnno() string {
	if x != nil {
		return x.Refcolumnno
	}
	return ""
}

func (x *CellSaveEntity) GetRepldid() string {
	if x != nil {
		return x.Repldid
	}
	return ""
}

// CellSaveSubEntity 落地的子单元格
type CellSaveSubEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repid      string `protobuf:"bytes,1,opt,name=repid,proto3" json:"repid,omitempty"`            // 单元格主体 node * java *
	Compid     string `protobuf:"bytes,2,opt,name=compid,proto3" json:"compid,omitempty"`          // 组件编码 node √ java √ FM-CELL/BLOCK-00001 （业务分类-COMPTYPE-nnnnn）
	Subcompid  string `protobuf:"bytes,3,opt,name=subcompid,proto3" json:"subcompid,omitempty"`    // subBlock编码 node √ java √ -COMPTYPE-nnnnn）
	Seqno      int64  `protobuf:"varint,4,opt,name=seqno,proto3" json:"seqno,omitempty"`           // 序号 node √ java √
	Compjqid   string `protobuf:"bytes,5,opt,name=compjqid,proto3" json:"compjqid,omitempty"`      // 久其编码 node √ java √
	Rlabel     string `protobuf:"bytes,6,opt,name=rlabel,proto3" json:"rlabel,omitempty"`          // 行标签 node √ java √
	Clabel     string `protobuf:"bytes,7,opt,name=clabel,proto3" json:"clabel,omitempty"`          // 列标签 node √ java √
	Rowno      string `protobuf:"bytes,8,opt,name=rowno,proto3" json:"rowno,omitempty"`            // 行位置 node √ java √
	Columnno   string `protobuf:"bytes,9,opt,name=columnno,proto3" json:"columnno,omitempty"`      // 列位置 node √ java √
	Cellvalue  string `protobuf:"bytes,10,opt,name=cellvalue,proto3" json:"cellvalue,omitempty"`   // 单元格条件 node √ java √
	Cellfilter string `protobuf:"bytes,11,opt,name=cellfilter,proto3" json:"cellfilter,omitempty"` // 单元格条件 node √ java √
	Mdate      int32  `protobuf:"varint,12,opt,name=mdate,proto3" json:"mdate,omitempty"`          // 制表日期 node * java *
	Mtime      int32  `protobuf:"varint,13,opt,name=mtime,proto3" json:"mtime,omitempty"`          // 制表时间 node * java *
	Muser      string `protobuf:"bytes,14,opt,name=muser,proto3" json:"muser,omitempty"`           // 制表人  node * java √
	Sheetid    string `protobuf:"bytes,15,opt,name=sheetid,proto3" json:"sheetid,omitempty"`
	Repldid    string `protobuf:"bytes,16,opt,name=repldid,proto3" json:"repldid,omitempty"`
}

func (x *CellSaveSubEntity) Reset() {
	*x = CellSaveSubEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svr_cell_v1_cell_db_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellSaveSubEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellSaveSubEntity) ProtoMessage() {}

func (x *CellSaveSubEntity) ProtoReflect() protoreflect.Message {
	mi := &file_svr_cell_v1_cell_db_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellSaveSubEntity.ProtoReflect.Descriptor instead.
func (*CellSaveSubEntity) Descriptor() ([]byte, []int) {
	return file_svr_cell_v1_cell_db_proto_rawDescGZIP(), []int{3}
}

func (x *CellSaveSubEntity) GetRepid() string {
	if x != nil {
		return x.Repid
	}
	return ""
}

func (x *CellSaveSubEntity) GetCompid() string {
	if x != nil {
		return x.Compid
	}
	return ""
}

func (x *CellSaveSubEntity) GetSubcompid() string {
	if x != nil {
		return x.Subcompid
	}
	return ""
}

func (x *CellSaveSubEntity) GetSeqno() int64 {
	if x != nil {
		return x.Seqno
	}
	return 0
}

func (x *CellSaveSubEntity) GetCompjqid() string {
	if x != nil {
		return x.Compjqid
	}
	return ""
}

func (x *CellSaveSubEntity) GetRlabel() string {
	if x != nil {
		return x.Rlabel
	}
	return ""
}

func (x *CellSaveSubEntity) GetClabel() string {
	if x != nil {
		return x.Clabel
	}
	return ""
}

func (x *CellSaveSubEntity) GetRowno() string {
	if x != nil {
		return x.Rowno
	}
	return ""
}

func (x *CellSaveSubEntity) GetColumnno() string {
	if x != nil {
		return x.Columnno
	}
	return ""
}

func (x *CellSaveSubEntity) GetCellvalue() string {
	if x != nil {
		return x.Cellvalue
	}
	return ""
}

func (x *CellSaveSubEntity) GetCellfilter() string {
	if x != nil {
		return x.Cellfilter
	}
	return ""
}

func (x *CellSaveSubEntity) GetMdate() int32 {
	if x != nil {
		return x.Mdate
	}
	return 0
}

func (x *CellSaveSubEntity) GetMtime() int32 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *CellSaveSubEntity) GetMuser() string {
	if x != nil {
		return x.Muser
	}
	return ""
}

func (x *CellSaveSubEntity) GetSheetid() string {
	if x != nil {
		return x.Sheetid
	}
	return ""
}

func (x *CellSaveSubEntity) GetRepldid() string {
	if x != nil {
		return x.Repldid
	}
	return ""
}

// CellInnerEntity 子单元格实体
type CellInnerEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repid     string `protobuf:"bytes,1,opt,name=repid,proto3" json:"repid,omitempty"`
	Compid    string `protobuf:"bytes,2,opt,name=compid,proto3" json:"compid,omitempty"`
	Subcompid string `protobuf:"bytes,3,opt,name=subcompid,proto3" json:"subcompid,omitempty"`
	Cellvalue string `protobuf:"bytes,4,opt,name=cellvalue,proto3" json:"cellvalue,omitempty"`
	Mdate     int32  `protobuf:"varint,5,opt,name=mdate,proto3" json:"mdate,omitempty"`
	Mtime     int32  `protobuf:"varint,6,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Muser     string `protobuf:"bytes,7,opt,name=muser,proto3" json:"muser,omitempty"`
}

func (x *CellInnerEntity) Reset() {
	*x = CellInnerEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svr_cell_v1_cell_db_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellInnerEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellInnerEntity) ProtoMessage() {}

func (x *CellInnerEntity) ProtoReflect() protoreflect.Message {
	mi := &file_svr_cell_v1_cell_db_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellInnerEntity.ProtoReflect.Descriptor instead.
func (*CellInnerEntity) Descriptor() ([]byte, []int) {
	return file_svr_cell_v1_cell_db_proto_rawDescGZIP(), []int{4}
}

func (x *CellInnerEntity) GetRepid() string {
	if x != nil {
		return x.Repid
	}
	return ""
}

func (x *CellInnerEntity) GetCompid() string {
	if x != nil {
		return x.Compid
	}
	return ""
}

func (x *CellInnerEntity) GetSubcompid() string {
	if x != nil {
		return x.Subcompid
	}
	return ""
}

func (x *CellInnerEntity) GetCellvalue() string {
	if x != nil {
		return x.Cellvalue
	}
	return ""
}

func (x *CellInnerEntity) GetMdate() int32 {
	if x != nil {
		return x.Mdate
	}
	return 0
}

func (x *CellInnerEntity) GetMtime() int32 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *CellInnerEntity) GetMuser() string {
	if x != nil {
		return x.Muser
	}
	return ""
}

var File_svr_cell_v1_cell_db_proto protoreflect.FileDescriptor

var file_svr_cell_v1_cell_db_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x76, 0x72, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65,
	0x6c, 0x6c, 0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x76, 0x72,
	0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x22, 0xaa, 0x03, 0x0a, 0x0a, 0x43, 0x65, 0x6c,
	0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6a, 0x71, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6a, 0x71, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x68, 0x65, 0x65, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x77, 0x6e, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x77, 0x6e, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x6e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x65, 0x6c,
	0x6c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x65,
	0x6c, 0x6c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x72, 0x6f,
	0x77, 0x6e, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x72, 0x6f,
	0x77, 0x6e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x6e, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x6e, 0x6f, 0x22, 0xe9, 0x02, 0x0a, 0x0d, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x75,
	0x62, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x70,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d,
	0x70, 0x6a, 0x71, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d,
	0x70, 0x6a, 0x71, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x77, 0x6e, 0x6f, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x77, 0x6e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x6e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x65, 0x6c, 0x6c,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x65, 0x65, 0x74,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x65, 0x65, 0x74, 0x69,
	0x64, 0x22, 0xe8, 0x03, 0x0a, 0x0e, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x61, 0x76, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x70,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6a, 0x71, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6a, 0x71, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x77, 0x6e, 0x6f, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x77, 0x6e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x6e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x6c, 0x6c, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x6c, 0x6c, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x72, 0x6f, 0x77, 0x6e, 0x6f,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x72, 0x6f, 0x77, 0x6e, 0x6f,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x6e, 0x6f, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x64, 0x69, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x64, 0x69, 0x64, 0x22, 0xa7, 0x03, 0x0a,
	0x11, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x61, 0x76, 0x65, 0x53, 0x75, 0x62, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x70,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x65, 0x71, 0x6e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6a, 0x71, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6a, 0x71, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x77, 0x6e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x6f, 0x77, 0x6e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x6e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x65, 0x6c, 0x6c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x65, 0x6c, 0x6c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x65, 0x65, 0x74, 0x69, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x65, 0x65, 0x74, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x64, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x64, 0x69, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x0f, 0x43, 0x65, 0x6c, 0x6c, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65,
	0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x63,
	0x6f, 0x6d, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x63, 0x6f, 0x6d, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x42, 0x5a, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x6e,
	0x74, 0x65, 0x63, 0x68, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x32, 0x42, 0x07, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x44, 0x42, 0x5a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x59, 0x65, 0x52, 0x75,
	0x79, 0x69, 0x2f, 0x64, 0x66, 0x73, 0x2d, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x76, 0x72, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x65, 0x6c, 0x6c,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svr_cell_v1_cell_db_proto_rawDescOnce sync.Once
	file_svr_cell_v1_cell_db_proto_rawDescData = file_svr_cell_v1_cell_db_proto_rawDesc
)

func file_svr_cell_v1_cell_db_proto_rawDescGZIP() []byte {
	file_svr_cell_v1_cell_db_proto_rawDescOnce.Do(func() {
		file_svr_cell_v1_cell_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_svr_cell_v1_cell_db_proto_rawDescData)
	})
	return file_svr_cell_v1_cell_db_proto_rawDescData
}

var file_svr_cell_v1_cell_db_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_svr_cell_v1_cell_db_proto_goTypes = []interface{}{
	(*CellEntity)(nil),        // 0: svr.cell.v1.CellEntity
	(*CellSubEntity)(nil),     // 1: svr.cell.v1.CellSubEntity
	(*CellSaveEntity)(nil),    // 2: svr.cell.v1.CellSaveEntity
	(*CellSaveSubEntity)(nil), // 3: svr.cell.v1.CellSaveSubEntity
	(*CellInnerEntity)(nil),   // 4: svr.cell.v1.CellInnerEntity
}
var file_svr_cell_v1_cell_db_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_svr_cell_v1_cell_db_proto_init() }
func file_svr_cell_v1_cell_db_proto_init() {
	if File_svr_cell_v1_cell_db_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svr_cell_v1_cell_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svr_cell_v1_cell_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellSubEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svr_cell_v1_cell_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellSaveEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svr_cell_v1_cell_db_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellSaveSubEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svr_cell_v1_cell_db_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellInnerEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svr_cell_v1_cell_db_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_svr_cell_v1_cell_db_proto_goTypes,
		DependencyIndexes: file_svr_cell_v1_cell_db_proto_depIdxs,
		MessageInfos:      file_svr_cell_v1_cell_db_proto_msgTypes,
	}.Build()
	File_svr_cell_v1_cell_db_proto = out.File
	file_svr_cell_v1_cell_db_proto_rawDesc = nil
	file_svr_cell_v1_cell_db_proto_goTypes = nil
	file_svr_cell_v1_cell_db_proto_depIdxs = nil
}
