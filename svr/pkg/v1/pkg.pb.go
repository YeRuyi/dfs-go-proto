// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: svr/pkg/v1/pkg.proto

package pkgv1

import (
	context "context"
	v1 "github.com/YeRuyi/dfs-go-proto/svr/ctx/v1"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ReqDonePkgStatusList 查询执行后
type ReqDonePkgStatusList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req    *v1.ListPageReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	UserID string          `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *ReqDonePkgStatusList) Reset() {
	*x = ReqDonePkgStatusList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svr_pkg_v1_pkg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDonePkgStatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDonePkgStatusList) ProtoMessage() {}

func (x *ReqDonePkgStatusList) ProtoReflect() protoreflect.Message {
	mi := &file_svr_pkg_v1_pkg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDonePkgStatusList.ProtoReflect.Descriptor instead.
func (*ReqDonePkgStatusList) Descriptor() ([]byte, []int) {
	return file_svr_pkg_v1_pkg_proto_rawDescGZIP(), []int{0}
}

func (x *ReqDonePkgStatusList) GetReq() *v1.ListPageReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *ReqDonePkgStatusList) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

var File_svr_pkg_v1_pkg_proto protoreflect.FileDescriptor

var file_svr_pkg_v1_pkg_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x76, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6b, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x76, 0x72, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x76, 0x31, 0x1a, 0x14, 0x73, 0x76, 0x72, 0x2f, 0x63, 0x74, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x44,
	0x6f, 0x6e, 0x65, 0x50, 0x6b, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x76, 0x72, 0x2e, 0x63, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x32, 0xa1, 0x01, 0x0a, 0x06, 0x50, 0x6b, 0x67, 0x53, 0x76, 0x72, 0x12, 0x43,
	0x0a, 0x0e, 0x67, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x50, 0x6b, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x17, 0x2e, 0x73, 0x76, 0x72, 0x2e, 0x63, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x76, 0x72, 0x2e,
	0x63, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x50, 0x6b,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x73, 0x76,
	0x72, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x44, 0x6f, 0x6e, 0x65,
	0x50, 0x6b, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x73, 0x76, 0x72, 0x2e, 0x63, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x53, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x6e,
	0x6e, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x32, 0x42, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x72, 0x5a, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x59, 0x65, 0x52, 0x75, 0x79, 0x69, 0x2f, 0x64,
	0x66, 0x73, 0x2d, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x76, 0x72, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x6b, 0x67, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svr_pkg_v1_pkg_proto_rawDescOnce sync.Once
	file_svr_pkg_v1_pkg_proto_rawDescData = file_svr_pkg_v1_pkg_proto_rawDesc
)

func file_svr_pkg_v1_pkg_proto_rawDescGZIP() []byte {
	file_svr_pkg_v1_pkg_proto_rawDescOnce.Do(func() {
		file_svr_pkg_v1_pkg_proto_rawDescData = protoimpl.X.CompressGZIP(file_svr_pkg_v1_pkg_proto_rawDescData)
	})
	return file_svr_pkg_v1_pkg_proto_rawDescData
}

var file_svr_pkg_v1_pkg_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_svr_pkg_v1_pkg_proto_goTypes = []interface{}{
	(*ReqDonePkgStatusList)(nil), // 0: svr.pkg.v1.ReqDonePkgStatusList
	(*v1.ListPageReq)(nil),       // 1: svr.ctx.v1.ListPageReq
	(*v1.BaseResponse)(nil),      // 2: svr.ctx.v1.BaseResponse
}
var file_svr_pkg_v1_pkg_proto_depIdxs = []int32{
	1, // 0: svr.pkg.v1.ReqDonePkgStatusList.req:type_name -> svr.ctx.v1.ListPageReq
	1, // 1: svr.pkg.v1.PkgSvr.getExecPkgList:input_type -> svr.ctx.v1.ListPageReq
	0, // 2: svr.pkg.v1.PkgSvr.getDonePkgStatusList:input_type -> svr.pkg.v1.ReqDonePkgStatusList
	2, // 3: svr.pkg.v1.PkgSvr.getExecPkgList:output_type -> svr.ctx.v1.BaseResponse
	2, // 4: svr.pkg.v1.PkgSvr.getDonePkgStatusList:output_type -> svr.ctx.v1.BaseResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_svr_pkg_v1_pkg_proto_init() }
func file_svr_pkg_v1_pkg_proto_init() {
	if File_svr_pkg_v1_pkg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svr_pkg_v1_pkg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDonePkgStatusList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svr_pkg_v1_pkg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svr_pkg_v1_pkg_proto_goTypes,
		DependencyIndexes: file_svr_pkg_v1_pkg_proto_depIdxs,
		MessageInfos:      file_svr_pkg_v1_pkg_proto_msgTypes,
	}.Build()
	File_svr_pkg_v1_pkg_proto = out.File
	file_svr_pkg_v1_pkg_proto_rawDesc = nil
	file_svr_pkg_v1_pkg_proto_goTypes = nil
	file_svr_pkg_v1_pkg_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PkgSvrClient is the client API for PkgSvr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PkgSvrClient interface {
	// getExecPkgList 获取可以落地的列表
	GetExecPkgList(ctx context.Context, in *v1.ListPageReq, opts ...grpc.CallOption) (*v1.BaseResponse, error)
	// getDonePkgStatusList 已执行包列表
	GetDonePkgStatusList(ctx context.Context, in *ReqDonePkgStatusList, opts ...grpc.CallOption) (*v1.BaseResponse, error)
}

type pkgSvrClient struct {
	cc grpc.ClientConnInterface
}

func NewPkgSvrClient(cc grpc.ClientConnInterface) PkgSvrClient {
	return &pkgSvrClient{cc}
}

func (c *pkgSvrClient) GetExecPkgList(ctx context.Context, in *v1.ListPageReq, opts ...grpc.CallOption) (*v1.BaseResponse, error) {
	out := new(v1.BaseResponse)
	err := c.cc.Invoke(ctx, "/svr.pkg.v1.PkgSvr/getExecPkgList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pkgSvrClient) GetDonePkgStatusList(ctx context.Context, in *ReqDonePkgStatusList, opts ...grpc.CallOption) (*v1.BaseResponse, error) {
	out := new(v1.BaseResponse)
	err := c.cc.Invoke(ctx, "/svr.pkg.v1.PkgSvr/getDonePkgStatusList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PkgSvrServer is the server API for PkgSvr service.
type PkgSvrServer interface {
	// getExecPkgList 获取可以落地的列表
	GetExecPkgList(context.Context, *v1.ListPageReq) (*v1.BaseResponse, error)
	// getDonePkgStatusList 已执行包列表
	GetDonePkgStatusList(context.Context, *ReqDonePkgStatusList) (*v1.BaseResponse, error)
}

// UnimplementedPkgSvrServer can be embedded to have forward compatible implementations.
type UnimplementedPkgSvrServer struct {
}

func (*UnimplementedPkgSvrServer) GetExecPkgList(context.Context, *v1.ListPageReq) (*v1.BaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExecPkgList not implemented")
}
func (*UnimplementedPkgSvrServer) GetDonePkgStatusList(context.Context, *ReqDonePkgStatusList) (*v1.BaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDonePkgStatusList not implemented")
}

func RegisterPkgSvrServer(s *grpc.Server, srv PkgSvrServer) {
	s.RegisterService(&_PkgSvr_serviceDesc, srv)
}

func _PkgSvr_GetExecPkgList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.ListPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PkgSvrServer).GetExecPkgList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/svr.pkg.v1.PkgSvr/GetExecPkgList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PkgSvrServer).GetExecPkgList(ctx, req.(*v1.ListPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PkgSvr_GetDonePkgStatusList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDonePkgStatusList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PkgSvrServer).GetDonePkgStatusList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/svr.pkg.v1.PkgSvr/GetDonePkgStatusList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PkgSvrServer).GetDonePkgStatusList(ctx, req.(*ReqDonePkgStatusList))
	}
	return interceptor(ctx, in, info, handler)
}

var _PkgSvr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "svr.pkg.v1.PkgSvr",
	HandlerType: (*PkgSvrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getExecPkgList",
			Handler:    _PkgSvr_GetExecPkgList_Handler,
		},
		{
			MethodName: "getDonePkgStatusList",
			Handler:    _PkgSvr_GetDonePkgStatusList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "svr/pkg/v1/pkg.proto",
}
